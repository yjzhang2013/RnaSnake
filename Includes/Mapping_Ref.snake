rule hisat2_build:
    input:
        genome = config["genome"]
    output:
        expand(config["genome"] + ".{index}.ht2", index = range(1,9))
    log:
        config["Mapping_Dir"] + "/hisat2-build.log"
    shell:
        "hisat2-build {input.genome} {input.genome} 1>{log} 2>&1"

rule hisat2:
    input:
        expand(config["genome"] + ".{index}.ht2", index = range(1,9)),
        left = config["Data_Dir"] + "/{sample}_1.fq.gz",
        right = config["Data_Dir"] + "/{sample}_2.fq.gz"
    output:
        bam = config["Mapping_Dir"] + "/{sample}.bam"
    threads: 6
    log: config["Mapping_Dir"] + "/{sample}.log"
    shell:
        "hisat2 --new-summary -p {threads} -x " + config["genome"] + 
        " -1 {input.left} -2 {input.right}"
        " 2>{log} | "
        " samtools view -Sb - | "
        " samtools sort -o {output.bam} -" 

#rule QoRTs:
#    input:
#        genome = config["genome"],
#        gtf = config["gtf"],
#        left = config["Data_Dir"] + "/{sample}_1.fq.gz",
#        right = config["Data_Dir"] + "/{sample}_2.fq.gz",
#        bam = config["Mapping_Dir"] + "/{sample}.bam"
#    output:
#    shell:
#        "qorts QC --generatePlots"
#        " --genomeFA {input.genome}"
#        " --rawfastq {input.left},{input.right} {input.bam} {input.gtf} " + config["Mapping_Dir"] + "/{wildcards.sample}"
